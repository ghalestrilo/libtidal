// Place your key bindings in this file to overwrite the defaults
[
  {
    "key": "ctrl+tab",
    "command": "workbench.action.nextEditor"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "workbench.action.previousEditor"
  },
  {
    "key": "ctrl+k ctrl+l",
    "command": "editor.action.transformToLowercase"
  },
  {
    "key": "ctrl+k ctrl+u",
    "command": "editor.action.transformToUppercase"
  },
  {
    "key": "ctrl+e",
    "command": "paredit.sexpRangeExpansion",
    "when": "editorTextFocus && !editorReadOnly && editorLangId =~ /clojure|scheme|lisp/ && paredit:keyMap =~ /original|strict/"
  },
  {
    "key": "ctrl+w",
    "command": "-paredit.sexpRangeExpansion",
    "when": "editorTextFocus && !editorReadOnly && editorLangId =~ /clojure|scheme|lisp/ && paredit:keyMap =~ /original|strict/"
  },
  {
    "key": "ctrl+k ctrl+space",
    "command": "editor.emmet.action.expandAbbreviation",
    "when": "config.emmet.triggerExpansionOnTab && editorTextFocus && !editorReadonly && !editorTabMovesFocus"
  },
  {
    "key": "ctrl+shift+space",
    "command": "-editor.action.triggerParameterHints",
    "when": "editorHasSignatureHelpProvider && editorTextFocus"
  },
  {
    "key": "ctrl+shift+space",
    "command": "-editor.action.triggerParameterHints",
    "when": "editorHasSignatureHelpProvider && editorTextFocus"
  },
  {
    "key": "shift+numpad8 shift+numpad8",
    "command": "editor.action.triggerParameterHints",
    "when": "editorHasSignatureHelpProvider && editorTextFocus"
  },
  {
    "key": "ctrl+shift+space",
    "command": "-editor.action.triggerParameterHints",
    "when": "editorHasSignatureHelpProvider && editorTextFocus"
  },
  {
    "key": "tab",
    "command": "-editor.emmet.action.expandAbbreviation",
    "when": "config.emmet.triggerExpansionOnTab && editorTextFocus && !editorReadonly && !editorTabMovesFocus"
  },
  {
    "key": "tab",
    "command": "-editor.emmet.action.expandAbbreviation",
    "when": "config.emmet.triggerExpansionOnTab && editorTextFocus && !editorReadonly && !editorTabMovesFocus"
  },
  {
    "key": "tab",
    "command": "-editor.emmet.action.expandAbbreviation",
    "when": "config.emmet.triggerExpansionOnTab && editorTextFocus && !editorReadonly && !editorTabMovesFocus"
  },
  {
    "key": "tab",
    "command": "-editor.emmet.action.expandAbbreviation",
    "when": "config.emmet.triggerExpansionOnTab && editorTextFocus && !editorReadonly && !editorTabMovesFocus"
  },
  {
    "key": "ctrl+shift+g e",
    "command": "workbench.view.explorer"
  },
  {
    "key": "ctrl+shift+e",
    "command": "-workbench.view.explorer"
},
{
    "key": "ctrl+'",
    "command": "workbench.action.terminal.toggleTerminal"
},
{
    "key": "ctrl+shift+[BracketLeft]",
    "command": "workbench.actions.view.problems"
},
{
    "key": "ctrl+shift+m",
    "command": "-workbench.actions.view.problems"
},
{
  "key": "ctrl+;",
  "command": "editor.action.commentLine",
  "when": "editorTextFocus && !editorReadonly"
},
{
  "key": "ctrl+/",
  "command": "-editor.action.commentLine",
  "when": "editorTextFocus && !editorReadonly"
}
  // - editor.action.transformToLowercase
  // - editor.action.transformToUppercase
]